{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar CanvasSize = 16;\nvar linkElements = [];\n\nvar drawAlert = function drawAlert(context, _ref) {\n  var fillColor = _ref.fillColor,\n      text = _ref.text,\n      textColor = _ref.textColor;\n  context.font = 'bold 10px arial';\n  var Padding = 3;\n  var w = context.measureText(text).width + Padding;\n  var x = CanvasSize - w;\n  var y = CanvasSize / 2 - Padding;\n  var h = Padding + CanvasSize / 2;\n  var r = Math.min(w / 2, h / 2);\n  context.beginPath();\n  context.moveTo(x + r, y);\n  context.arcTo(x + w, y, x + w, y + h, r);\n  context.arcTo(x + w, y + h, x, y + h, r);\n  context.arcTo(x, y + h, x, y, r);\n  context.arcTo(x, y, x + w, y, r);\n  context.closePath();\n  context.fillStyle = fillColor;\n  context.fill();\n  context.fillStyle = textColor;\n  context.textBaseline = 'bottom';\n  context.textAlign = 'right';\n  context.fillText(text, CanvasSize - Padding / 2, CanvasSize);\n};\n\nfunction drawIcon(_ref2) {\n  var alertCount = _ref2.alertCount,\n      alertFillColor = _ref2.alertFillColor,\n      alertTextColor = _ref2.alertTextColor,\n      callback = _ref2.callback,\n      renderOverlay = _ref2.renderOverlay,\n      src = _ref2.url;\n  var img = document.createElement('img');\n  img.crossOrigin = 'Anonymous';\n\n  img.onload = function () {\n    var canvas = document.createElement('canvas');\n    canvas.width = CanvasSize;\n    canvas.height = CanvasSize;\n    var context = canvas.getContext('2d');\n    context.clearRect(0, 0, img.width, img.height);\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n    if (alertCount) {\n      drawAlert(context, {\n        fillColor: alertFillColor,\n        textColor: alertTextColor,\n        text: alertCount\n      });\n    }\n\n    if (renderOverlay) {\n      renderOverlay(canvas, context);\n    }\n\n    callback(context.canvas.toDataURL());\n  };\n\n  img.src = src;\n}\n\nvar Favicon = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Favicon, _React$Component);\n\n  function Favicon() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      animationIndex: 0,\n      animationLoop: null,\n      animationRunning: false\n    };\n    return _this;\n  }\n\n  Favicon.getActiveInstance = function getActiveInstance() {\n    return Favicon.mountedInstances[Favicon.mountedInstances.length - 1];\n  };\n\n  Favicon.draw = function draw() {\n    if (typeof document === 'undefined') return;\n    var activeInstance = Favicon.getActiveInstance();\n\n    if (linkElements.length === 0) {\n      var head = document.getElementsByTagName('head')[0];\n      var linkEl = document.createElement('link');\n      linkEl.type = 'image/x-icon';\n      linkEl.rel = 'icon';\n      var linkApple = document.createElement('link');\n      linkApple.rel = 'apple-touch-icon';\n      linkElements.push(linkEl, linkApple);\n      var links = head.getElementsByTagName('link');\n\n      for (var i = links.length; --i >= 0;) {\n        if (/\\bicon\\b/i.test(links[i].getAttribute('rel')) && !activeInstance.props.keepIconLink(links[i])) {\n          head.removeChild(links[i]);\n        }\n      }\n\n      linkElements.forEach(function (el) {\n        return head.appendChild(el);\n      });\n    }\n\n    var currentUrl;\n\n    if (activeInstance.props.url instanceof Array) {\n      currentUrl = activeInstance.props.url[activeInstance.state.animationIndex];\n    } else {\n      currentUrl = activeInstance.props.url;\n    }\n\n    if (activeInstance.props.alertCount || activeInstance.props.renderOverlay) {\n      drawIcon({\n        alertCount: activeInstance.props.alertCount,\n        alertFillColor: activeInstance.props.alertFillColor,\n        alertTextColor: activeInstance.props.alertTextColor,\n        callback: function callback(url) {\n          linkElements.forEach(function (el) {\n            return el.href = url;\n          });\n        },\n        renderOverlay: activeInstance.props.renderOverlay,\n        url: currentUrl\n      });\n    } else {\n      linkElements.forEach(function (el) {\n        return el.href = currentUrl;\n      });\n    }\n  };\n\n  Favicon.update = function update() {\n    if (typeof document === 'undefined') return;\n    var activeInstance = Favicon.getActiveInstance();\n    var isAnimated = activeInstance.props.url instanceof Array && activeInstance.props.animated;\n    var intervalId = null;\n    clearInterval(activeInstance.state.animationLoop);\n\n    if (isAnimated) {\n      var animateFavicon = function animateFavicon() {\n        var nextAnimationIndex = (activeInstance.state.animationIndex + 1) % activeInstance.props.url.length;\n        Favicon.draw();\n        activeInstance.setState({\n          animationIndex: nextAnimationIndex\n        });\n      };\n\n      intervalId = setInterval(animateFavicon, activeInstance.props.animationDelay);\n      animateFavicon();\n    } else {\n      Favicon.draw();\n    }\n\n    activeInstance.setState({\n      animationLoop: intervalId\n    });\n  };\n\n  var _proto = Favicon.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    Favicon.mountedInstances.push(this);\n    Favicon.update();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var activeInstance = Favicon.getActiveInstance();\n    clearInterval(activeInstance.state.animationLoop);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.url === this.props.url && prevProps.animated === this.props.animated && prevProps.alertCount === this.props.alertCount && prevProps.alertFillColor === this.props.alertFillColor && prevProps.alertTextColor === this.props.alertTextColor && prevProps.renderOverlay === this.props.renderOverlay && prevProps.keepIconLink === this.props.keepIconLink) return;\n    Favicon.update();\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Favicon;\n}(React.Component);\n\nFavicon.displayName = 'Favicon';\nFavicon.mountedInstances = [];\nFavicon.defaultProps = {\n  alertCount: null,\n  alertFillColor: 'red',\n  alertTextColor: 'white',\n  animated: true,\n  animationDelay: 500,\n  keepIconLink: function keepIconLink() {\n    return false;\n  },\n  renderOverlay: null,\n  url: null\n};\nFavicon.propTypes = {\n  alertCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  alertFillColor: PropTypes.string,\n  alertTextColor: PropTypes.string,\n  animated: PropTypes.bool,\n  animationDelay: PropTypes.number,\n  keepIconLink: PropTypes.func,\n  renderOverlay: PropTypes.func,\n  url: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]).isRequired\n};\nmodule.exports = Favicon;","map":{"version":3,"sources":["../src/index.js"],"names":["React","require","PropTypes","CanvasSize","linkElements","drawAlert","fillColor","text","textColor","context","Padding","w","x","y","h","r","Math","alertCount","alertFillColor","alertTextColor","callback","renderOverlay","url","src","img","document","canvas","Favicon","Component","displayName","mountedInstances","getActiveInstance","draw","activeInstance","head","linkEl","linkApple","links","i","currentUrl","drawIcon","el","update","isAnimated","intervalId","clearInterval","animateFavicon","nextAnimationIndex","animationIndex","setInterval","animationLoop","state","animationRunning","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","render","animated","animationDelay","keepIconLink","isRequired","module"],"mappings":"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","sourcesContent":["'use strict'\n\nconst React = require('react')\nconst PropTypes = require('prop-types')\n\nconst CanvasSize = 16\nconst linkElements = []\n\nconst drawAlert = (context, { alertCount, fillColor, text, textColor }) => {\n  context.font = 'bold 10px arial'\n  const Padding = 3\n\n  const w = context.measureText(text).width + Padding\n  const x = CanvasSize - w\n  const y = CanvasSize / 2 - Padding\n  const h = Padding + CanvasSize / 2\n  const r = Math.min(w / 2, h / 2)\n\n  context.beginPath()\n  context.moveTo(x + r, y)\n  context.arcTo(x + w, y, x + w, y + h, r)\n  context.arcTo(x + w, y + h, x, y + h, r)\n  context.arcTo(x, y + h, x, y, r)\n  context.arcTo(x, y, x + w, y, r)\n  context.closePath()\n  context.fillStyle = fillColor\n  context.fill()\n  context.fillStyle = textColor\n  context.textBaseline = 'bottom'\n  context.textAlign = 'right'\n  context.fillText(text, CanvasSize - Padding / 2, CanvasSize)\n}\n\nfunction drawIcon({\n  alertCount,\n  alertFillColor,\n  alertTextColor,\n  callback,\n  renderOverlay,\n  url: src,\n}) {\n  const img = document.createElement('img')\n  img.crossOrigin = 'Anonymous'\n  img.onload = function () {\n    const canvas = document.createElement('canvas')\n    canvas.width = CanvasSize\n    canvas.height = CanvasSize\n\n    const context = canvas.getContext('2d')\n    context.clearRect(0, 0, img.width, img.height)\n    context.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n    if (alertCount) {\n      drawAlert(context, {\n        fillColor: alertFillColor,\n        textColor: alertTextColor,\n        text: alertCount,\n      })\n    }\n\n    if (renderOverlay) {\n      renderOverlay(canvas, context)\n    }\n\n    callback(context.canvas.toDataURL())\n  }\n  img.src = src\n}\n\nclass Favicon extends React.Component {\n  static displayName = 'Favicon'\n\n  static mountedInstances = []\n\n  static getActiveInstance() {\n    return Favicon.mountedInstances[Favicon.mountedInstances.length - 1]\n  }\n\n  static draw() {\n    if (typeof document === 'undefined') return\n\n    var activeInstance = Favicon.getActiveInstance()\n    if (linkElements.length === 0) {\n      var head = document.getElementsByTagName('head')[0]\n\n      const linkEl = document.createElement('link')\n      linkEl.type = 'image/x-icon'\n      linkEl.rel = 'icon'\n\n      const linkApple = document.createElement('link')\n      linkApple.rel = 'apple-touch-icon'\n\n      linkElements.push(linkEl, linkApple)\n\n      // remove existing favicons\n      var links = head.getElementsByTagName('link')\n      for (var i = links.length; --i >= 0; ) {\n        if (\n          /\\bicon\\b/i.test(links[i].getAttribute('rel')) &&\n          !activeInstance.props.keepIconLink(links[i])\n        ) {\n          head.removeChild(links[i])\n        }\n      }\n\n      linkElements.forEach((el) => head.appendChild(el))\n    }\n\n    var currentUrl\n\n    if (activeInstance.props.url instanceof Array) {\n      currentUrl = activeInstance.props.url[activeInstance.state.animationIndex]\n    } else {\n      currentUrl = activeInstance.props.url\n    }\n\n    if (activeInstance.props.alertCount || activeInstance.props.renderOverlay) {\n      drawIcon({\n        alertCount: activeInstance.props.alertCount,\n        alertFillColor: activeInstance.props.alertFillColor,\n        alertTextColor: activeInstance.props.alertTextColor,\n        callback: (url) => {\n          linkElements.forEach((el) => el.href = url)\n        },\n        renderOverlay: activeInstance.props.renderOverlay,\n        url: currentUrl,\n      })\n    } else {\n      linkElements.forEach((el) => el.href = currentUrl)\n    }\n  }\n\n  static update() {\n    if (typeof document === 'undefined') return\n\n    var activeInstance = Favicon.getActiveInstance()\n    var isAnimated =\n      activeInstance.props.url instanceof Array && activeInstance.props.animated\n\n    // clear any running animations\n    var intervalId = null\n    clearInterval(activeInstance.state.animationLoop)\n\n    if (isAnimated) {\n      var animateFavicon = function animateFavicon() {\n        var nextAnimationIndex =\n          (activeInstance.state.animationIndex + 1) %\n          activeInstance.props.url.length\n        Favicon.draw()\n        activeInstance.setState({ animationIndex: nextAnimationIndex })\n      }\n      intervalId = setInterval(\n        animateFavicon,\n        activeInstance.props.animationDelay\n      )\n      animateFavicon()\n    } else {\n      Favicon.draw()\n    }\n\n    activeInstance.setState({ animationLoop: intervalId })\n  }\n\n  state = {\n    animationIndex: 0,\n    animationLoop: null,\n    animationRunning: false,\n  }\n\n  componentDidMount() {\n    Favicon.mountedInstances.push(this)\n    Favicon.update()\n  }\n\n  componentWillUnmount() {\n    var activeInstance = Favicon.getActiveInstance()\n    clearInterval(activeInstance.state.animationLoop)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.url === this.props.url &&\n      prevProps.animated === this.props.animated &&\n      prevProps.alertCount === this.props.alertCount &&\n      prevProps.alertFillColor === this.props.alertFillColor &&\n      prevProps.alertTextColor === this.props.alertTextColor &&\n      prevProps.renderOverlay === this.props.renderOverlay &&\n      prevProps.keepIconLink === this.props.keepIconLink\n    )\n      return\n\n    Favicon.update()\n  }\n\n  render() {\n    return null\n  }\n}\n\nFavicon.defaultProps = {\n  alertCount: null,\n  alertFillColor: 'red',\n  alertTextColor: 'white',\n  animated: true,\n  animationDelay: 500,\n  keepIconLink: () => false,\n  renderOverlay: null,\n  url: null,\n}\n\nFavicon.propTypes = {\n  alertCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  alertFillColor: PropTypes.string,\n  alertTextColor: PropTypes.string,\n  animated: PropTypes.bool,\n  animationDelay: PropTypes.number,\n  keepIconLink: PropTypes.func,\n  renderOverlay: PropTypes.func,\n  url: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]).isRequired,\n}\n\nmodule.exports = Favicon\n"]},"metadata":{},"sourceType":"script"}