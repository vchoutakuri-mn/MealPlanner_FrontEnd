{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vchava\\\\OneDrive - MODEL N, INC\\\\Desktop\\\\mp_front\\\\MealPlanner_FrontEnd\\\\src\\\\components\\\\Vender\\\\EmployeeMealDetails.js\";\nimport { indigo } from '@material-ui/core/colors';\nimport React, { useState } from 'react';\nimport './css/App.css';\nimport Employee from './data/Employee';\nimport Footer from './footer';\nimport SimpleDialog from './SendNotificationConfirm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar SelectedEmployees = [];\nvar Users = [];\nvar ShowUsers = [];\nvar TEMPORERY_SIZE = 13;\nlet DEFAULT_PAGE_SIZE = 10;\nexport default class EmployeeMealDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      SelectedEmployees: [],\n      ShowUsers: [],\n      open: false,\n      noOfDaysInPercentage: 0,\n      noOfDays: 0,\n      searchBy: 'Employee ID',\n      pageSize: DEFAULT_PAGE_SIZE,\n      pageNo: 1,\n      totalNoOfRecords: 0\n    };\n    this.setEmployes = this.setEmployes.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.setPercentage = this.setPercentage.bind(this);\n    this.setDays = this.setDays.bind(this);\n    this.setShowUsers = this.setShowUsers.bind(this);\n    this.search = this.search.bind(this);\n    this.setUsers = this.setUsers.bind(this);\n    this.selectSearchType = this.selectSearchType.bind(this);\n    this.backward = this.backward.bind(this);\n    this.previousPage = this.previousPage.bind(this);\n    this.forward = this.forward.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.selectRowsPerPage = this.selectRowsPerPage.bind(this);\n    this.checkList = this.checkList.bind(this);\n  }\n  /**\r\n   * Get the data from an api and store in the state vairable 'users'\r\n   * As of now add the number of days and percentage because the api is not created properly\r\n   * thus add the static data to the 'users' variable\r\n   */\n\n\n  componentDidMount() {\n    this.getNumberOfRecords(this.checkList);\n    this.getData(this.state.pageNo, this.state.pageSize);\n  }\n\n  checkList() {\n    //data is stores in totalNoOfRecords variable\n    console.log(this.state.totalNoOfRecords);\n  }\n\n  getData(pageNo, pageSize) {\n    Employee.getUsers(pageNo, pageSize).then(Response => {\n      Response.data.content.map(user => {\n        user['noOfDays'] = Math.floor(Math.random() * 30);\n        user['noOfDaysInPercentage'] = Math.floor(Math.random() * 100);\n        this.state.ShowUsers.push(user.id);\n        ShowUsers.push(user.id);\n      });\n      this.setState({\n        users: Response.data.content\n      });\n      Users = this.state.users;\n    });\n  } //Returns the length of the data that is coming from the api\n\n\n  getNumberOfRecords(checkList) {\n    Employee.getNoOfRecords().then(Response => {\n      this.state.totalNoOfRecords = Response.data;\n      checkList();\n    });\n  }\n\n  setShowUsers() {}\n\n  setUsers(user) {\n    this.setState({\n      users: user\n    });\n  }\n\n  setPercentage() {\n    this.setState({\n      noOfDaysInPercentage: Math.random() * 100\n    });\n  }\n\n  setDays() {\n    this.setState({\n      noOfDays: Math.random() * 30\n    });\n  }\n\n  /**\r\n   * \r\n   * @param {e}  e is an event listner\r\n   * Save the selected employee in global varible i.e 'SelectedEmployees' depending  on the following condition\r\n   * if the toggle button is checked and \r\n   *      employeeId is not present in 'SelectedEmployees' \r\n   *          then add the employeeIDn to the 'SelectedEmployees'\r\n   *          else(i.e employeeId is already present in 'SelectedEmployees') remove the employeeID from 'SelectedEmployees'\r\n   */\n  setEmployes(e) {\n    let IDs = e.target.id;\n\n    if (e.target.checked == true && !SelectedEmployees.includes(IDs)) {\n      SelectedEmployees.push(IDs);\n    } else {\n      SelectedEmployees.splice(SelectedEmployees.indexOf(IDs), 1);\n    }\n\n    this.setState({\n      SelectedEmployees: e\n    });\n  }\n\n  raiseNotification(e) {}\n\n  uncheck() {\n    console.log(\"Unchecking\");\n  }\n  /**\r\n   * \r\n   * @param {*} \r\n   * handleClose is used to close the popUp window or dialog which is raised\r\n   \r\n   */\n\n\n  handleClose(value) {\n    this.setState({\n      open: false\n    });\n  }\n\n  /**\r\n   * \r\n   * @param {e}  e is an event listner\r\n   * Save the selected employee in global varible i.e 'SelectedEmployees' depending  on the following condition\r\n   * if the toggle button is checked and \r\n   *      employeeId is not present in 'SelectedEmployees' \r\n   *          then add the employeeIDn to the 'SelectedEmployees'\r\n   *          else(i.e employeeId is already present in 'SelectedEmployees') remove the employeeID from 'SelectedEmployees'\r\n   */\n  toggleClicked(e) {\n    let IDs = e.target.id;\n\n    if (e.target.checked == true && !SelectedEmployees.includes(IDs)) {\n      SelectedEmployees.push(IDs);\n    } else {\n      SelectedEmployees.splice(SelectedEmployees.indexOf(IDs), 1);\n    }\n\n    console.log(\"Selected Employees\", SelectedEmployees);\n  }\n  /**\r\n   * Search the employees based on employeeID\r\n   * Function defination:\r\n   *      First store all the employeeDetails in one global varible rather than state varibale then \r\n   *    whenever the vendor searchs the based on employeeID then remove all the employee other than the\r\n   *    that employeeID. If the search text is empty then all the employeeDetails will be displayed\r\n   *      {or}\r\n   *      Add keyboard event listner and remove the search button which will execute this event whenever \r\n   *    the vender releases key and then do the same procedure as in the above\r\n   */\n\n  /**\r\n   * implemented\r\n   */\n\n\n  bond(user) {\n    console.log(\"garbage function delete now\", user);\n  }\n  /**\r\n   * Chnages the data of state users\r\n   * @returns \r\n   */\n\n\n  search() {\n    let searchData = document.getElementById('searchData').value;\n    console.log('value..', searchData, this.state.users);\n\n    if (searchData == '' || searchData == undefined) {\n      this.state.users = Users;\n      this.setState({\n        ShowUsers: [0]\n      });\n      return;\n    }\n\n    this.state.users = [];\n\n    switch (this.state.searchBy) {\n      case \"Employee ID\":\n        for (let userNumber = 0; userNumber < Users.length; userNumber++) {\n          if (searchData != '' && String(Users[userNumber].id).includes(searchData)) {\n            this.state.users.push(Users[userNumber]);\n          }\n        }\n\n        break;\n\n      case \"Employee name\":\n        for (let userNumber = 0; userNumber < Users.length; userNumber++) {\n          if (Users[userNumber].employeeName.toUpperCase().includes(searchData.toUpperCase())) {\n            this.state.users.push(Users[userNumber]);\n          }\n        }\n\n        break;\n\n      case \"Employee email\":\n        for (let userNumber = 0; userNumber < Users.length; userNumber++) {\n          if (Users[userNumber].email.toUpperCase().includes(searchData.toUpperCase())) {\n            this.state.users.push(Users[userNumber]);\n          }\n        }\n\n        break;\n\n      case \"Number of days skipped\":\n        for (let userNumber = 0; userNumber < Users.length; userNumber++) {\n          if (searchData != '' && String(Users[userNumber].noOfDays).includes(searchData)) {\n            this.state.users.push(Users[userNumber]);\n          }\n        }\n\n        break;\n\n      default:\n        console.log(\"In default\");\n        this.state.users = Users;\n        break;\n    }\n\n    this.setState({\n      ShowUsers: [0]\n    });\n    console.log(\"...\", this.state.users, searchData);\n  }\n\n  selectSearchType(e) {\n    this.setState({\n      searchBy: e.target.value\n    });\n    console.log(this.state.searchBy);\n  }\n\n  backward() {\n    if (this.state.pageNo - 2 > 0) {\n      this.state.pageNo = this.state.pageNo - 2;\n      this.getData(this.state.pageNo, this.state.selectedRows);\n    }\n  }\n\n  previousPage() {\n    if (this.state.pageNo - 1 > 0) {\n      this.state.pageNo = this.state.pageNo - 1;\n      this.getData(this.state.pageNo, this.state.pageSize);\n    }\n  } //Get the length of  data present in database\n\n\n  nextPage() {\n    if (this.state.pageNo + 1 < TEMPORERY_SIZE) {\n      this.state.pageNo = this.state.pageNo + 1;\n      this.getData(this.state.pageNo, this.state.pageSize);\n    }\n  }\n\n  forward() {\n    if (this.state.pageNo + 2 < TEMPORERY_SIZE) {\n      this.state.pageNo = this.state.pageNo + 2;\n      this.getData(this.state.pageNo, this.state.pageSize);\n    }\n  }\n\n  selectRowsPerPage(pageSize) {\n    this.state.pageSize = pageSize;\n    this.getData(this.state.pageNo, pageSize);\n  }\n\n  render() {\n    //console.log(\"This is in body page\")\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"employeeInformation\",\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          href: \"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\",\n          rel: \"stylesheet\",\n          id: \"bootstrap-css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n          src: \"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n          src: \"//code.jquery.com/jquery-1.11.1.min.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"searchData\",\n            style: {\n              float: 'left',\n              marginTop: '5px'\n            },\n            placeholder: this.state.searchBy,\n            onKeyUp: this.search,\n            name: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"sortBy\",\n            id: \"sortBy\",\n            onChange: this.search,\n            class: \"btn btn-primary pull-left\",\n            style: {\n              float: 'left',\n              marginTop: '5px',\n              marginLeft: '5px'\n            },\n            onClick: this.selectSearchType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Employee ID\",\n              children: \"Search by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Employee ID\",\n              children: \"EmployeeID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Employee name\",\n              children: \"Employee name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Employee email\",\n              children: \"Employee email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Number of days skipped\",\n              children: \"Number of days skipped\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: this.search,\n            class: \"btn btn-primary pull-left\",\n            style: {\n              marginLeft: '5px',\n              height: \"30px\",\n              marginTop: '5px'\n            },\n            \"data-title\": \"Signout\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#ssignout\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 232\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"mytable\",\n          class: \"table\",\n          style: {\n            height: '50%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Meal taken in percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No of days skipped\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            style: {\n              height: \"350px\"\n            },\n            children: this.state.users.length != 0 ? this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.employeeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"progress\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: user.noOfDaysInPercentage + \"%\"\n                    },\n                    \"aria-valuemax\": \"100\",\n                    \"aria-valuemin\": \"0\",\n                    \"aria-valuenow\": \"60\",\n                    role: \"progressbar\",\n                    class: \"red progress-bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [user.noOfDaysInPercentage, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"label label-info\",\n                  children: user.noOfDays\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  class: \"switch\",\n                  children: user.status == 'no' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      id: user.id,\n                      onClick: this.toggleClicked\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"slider round\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Submitted\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 59\n                    }, this)\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                width: '100%',\n                marginTop: '10%'\n              },\n              children: \"No data found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        selectRowsPerPage: this.selectRowsPerPage,\n        rowsPerPage: 10,\n        pageNo: this.state.pageNo,\n        noOfRecords: this.state.totalNoOfRecords,\n        backward: this.backward,\n        previousPage: this.previousPage,\n        nextPage: this.nextPage,\n        forward: this.forward,\n        pageSize: this.state.pageSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n        open: this.props.open,\n        onClose: this.props.onClose,\n        SelectedEmployees: SelectedEmployees,\n        Users: Users,\n        doSave: this.props.doSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n/**\r\n * \r\n * @param {*} SelectedEmployees \r\n * SelectedEmployees is a array which holds the employee id which are selected to send an status\r\n * Uncheck and change the notified text to submitted because these SelectedEmployees has sent a status\r\n */\n\nfunction uncheck(SelectedEmployees) {\n  //console.log(\"Unchecking\",SelectedEmployees.length)\n  if (SelectedEmployees.length != 0 && SelectedEmployees.length != undefined) {\n    SelectedEmployees.forEach(employeeID => {\n      let checkBox = document.getElementById(employeeID);\n      checkBox.checked = false;\n      checkBox.disabled = true;\n      checkBox.parentElement.parentElement.lastElementChild.innerHTML = 'Submitted';\n      Employee.submitStatus(employeeID);\n    });\n    console.log([new Date(), SelectedEmployees]);\n  }\n}\n/**\r\n * To clear all the employeeID's in the global variable whenever the component reloads\r\n * \r\n * Defination done\r\n */\n\n\nfunction releasingEmployees() {\n  SelectedEmployees = [];\n}\n/**\r\n * \r\n * @returns true\r\n * As of now no use of isSelected\r\n */\n\n\nfunction isSelected() {\n  if (SelectedEmployees.length == 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport { uncheck, releasingEmployees, isSelected };","map":{"version":3,"sources":["C:/Users/vchava/OneDrive - MODEL N, INC/Desktop/mp_front/MealPlanner_FrontEnd/src/components/Vender/EmployeeMealDetails.js"],"names":["indigo","React","useState","Employee","Footer","SimpleDialog","SelectedEmployees","Users","ShowUsers","TEMPORERY_SIZE","DEFAULT_PAGE_SIZE","EmployeeMealDetails","Component","constructor","props","state","users","open","noOfDaysInPercentage","noOfDays","searchBy","pageSize","pageNo","totalNoOfRecords","setEmployes","bind","handleClose","setPercentage","setDays","setShowUsers","search","setUsers","selectSearchType","backward","previousPage","forward","nextPage","selectRowsPerPage","checkList","componentDidMount","getNumberOfRecords","getData","console","log","getUsers","then","Response","data","content","map","user","Math","floor","random","push","id","setState","getNoOfRecords","e","IDs","target","checked","includes","splice","indexOf","raiseNotification","uncheck","value","toggleClicked","bond","searchData","document","getElementById","undefined","userNumber","length","String","employeeName","toUpperCase","email","selectedRows","render","float","marginTop","marginLeft","height","width","status","onClose","doSave","forEach","employeeID","checkBox","disabled","parentElement","lastElementChild","innerHTML","submitStatus","Date","releasingEmployees","isSelected"],"mappings":"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","sourcesContent":["import { indigo } from '@material-ui/core/colors';\r\nimport React, { useState } from 'react'\r\nimport './css/App.css'\r\nimport Employee from './data/Employee';\r\nimport Footer from './footer';\r\nimport SimpleDialog from './SendNotificationConfirm'\r\n\r\n\r\nvar SelectedEmployees = []\r\nvar Users = [];\r\nvar ShowUsers = []\r\nvar TEMPORERY_SIZE=13\r\nlet DEFAULT_PAGE_SIZE=10;\r\n\r\nexport default class EmployeeMealDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: [],\r\n            SelectedEmployees: [],\r\n            ShowUsers: [],\r\n            open: false,\r\n            noOfDaysInPercentage: 0,\r\n            noOfDays: 0,\r\n            searchBy:'Employee ID',\r\n            pageSize:DEFAULT_PAGE_SIZE,\r\n            pageNo:1,\r\n            totalNoOfRecords:0\r\n        }\r\n        this.setEmployes = this.setEmployes.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.setPercentage = this.setPercentage.bind(this);\r\n        this.setDays = this.setDays.bind(this);\r\n        this.setShowUsers = this.setShowUsers.bind(this)\r\n        this.search=this.search.bind(this);\r\n        this.setUsers=this.setUsers.bind(this);\r\n        this.selectSearchType=this.selectSearchType.bind(this);\r\n        this.backward=this.backward.bind(this);\r\n        this.previousPage=this.previousPage.bind(this);\r\n        this.forward=this.forward.bind(this)\r\n        this.nextPage=this.nextPage.bind(this);\r\n        this.selectRowsPerPage=this.selectRowsPerPage.bind(this);\r\n        this.checkList=this.checkList.bind(this)\r\n    }\r\n    /**\r\n     * Get the data from an api and store in the state vairable 'users'\r\n     * As of now add the number of days and percentage because the api is not created properly\r\n     * thus add the static data to the 'users' variable\r\n     */\r\n    componentDidMount() {\r\n        this.getNumberOfRecords(this.checkList)\r\n        this.getData(this.state.pageNo,this.state.pageSize)\r\n        \r\n        \r\n    };\r\n    checkList(){\r\n        //data is stores in totalNoOfRecords variable\r\n        console.log(this.state.totalNoOfRecords)\r\n    }\r\n\r\n    getData(pageNo,pageSize){\r\n        Employee.getUsers(pageNo,pageSize).then((Response) => {\r\n            Response.data.content.map(\r\n                user => {\r\n                    user['noOfDays'] = Math.floor(Math.random() * 30)\r\n                    user['noOfDaysInPercentage'] = Math.floor(Math.random() * 100)\r\n                    this.state.ShowUsers.push(user.id)\r\n                    ShowUsers.push(user.id)\r\n                }\r\n            )\r\n            this.setState({ users: Response.data.content })\r\n            Users=this.state.users;\r\n            \r\n        });\r\n    }\r\n    //Returns the length of the data that is coming from the api\r\n    getNumberOfRecords(checkList){\r\n        Employee.getNoOfRecords().then((Response)=>{\r\n           this.state.totalNoOfRecords=Response.data;\r\n           checkList()\r\n        })\r\n      \r\n    }\r\n    setShowUsers() {\r\n\r\n    }\r\n\r\n    setUsers(user){\r\n        this.setState({users:user})\r\n    }\r\n\r\n    setPercentage() {\r\n        this.setState({ noOfDaysInPercentage: Math.random() * 100 })\r\n    }\r\n\r\n    setDays() {\r\n        this.setState({ noOfDays: Math.random() * 30 })\r\n    }\r\no\r\n/**\r\n * \r\n * @param {e}  e is an event listner\r\n * Save the selected employee in global varible i.e 'SelectedEmployees' depending  on the following condition\r\n * if the toggle button is checked and \r\n *      employeeId is not present in 'SelectedEmployees' \r\n *          then add the employeeIDn to the 'SelectedEmployees'\r\n *          else(i.e employeeId is already present in 'SelectedEmployees') remove the employeeID from 'SelectedEmployees'\r\n */\r\n    setEmployes(e) {\r\n        let IDs = e.target.id;\r\n        if (e.target.checked == true && !SelectedEmployees.includes(IDs)) {\r\n            SelectedEmployees.push(IDs)\r\n        } else {\r\n            SelectedEmployees.splice(SelectedEmployees.indexOf(IDs), 1)\r\n        }\r\n        this.setState({ SelectedEmployees: e })\r\n\r\n    }\r\n\r\n    raiseNotification(e) {\r\n    }\r\n    uncheck() {\r\n        console.log(\"Unchecking\")\r\n    }\r\n    /**\r\n     * \r\n     * @param {*} \r\n     * handleClose is used to close the popUp window or dialog which is raised\r\n     \r\n     */\r\n    handleClose(value) {\r\n        this.setState({ open: false })\r\n    };\r\n/**\r\n * \r\n * @param {e}  e is an event listner\r\n * Save the selected employee in global varible i.e 'SelectedEmployees' depending  on the following condition\r\n * if the toggle button is checked and \r\n *      employeeId is not present in 'SelectedEmployees' \r\n *          then add the employeeIDn to the 'SelectedEmployees'\r\n *          else(i.e employeeId is already present in 'SelectedEmployees') remove the employeeID from 'SelectedEmployees'\r\n */\r\n    toggleClicked(e) {\r\n        let IDs = e.target.id;\r\n        if (e.target.checked == true && !SelectedEmployees.includes(IDs)) {\r\n            SelectedEmployees.push(IDs)\r\n        } else {\r\n            SelectedEmployees.splice(SelectedEmployees.indexOf(IDs), 1)\r\n        }\r\n        console.log(\"Selected Employees\", SelectedEmployees)\r\n    }\r\n    /**\r\n     * Search the employees based on employeeID\r\n     * Function defination:\r\n     *      First store all the employeeDetails in one global varible rather than state varibale then \r\n     *    whenever the vendor searchs the based on employeeID then remove all the employee other than the\r\n     *    that employeeID. If the search text is empty then all the employeeDetails will be displayed\r\n     *      {or}\r\n     *      Add keyboard event listner and remove the search button which will execute this event whenever \r\n     *    the vender releases key and then do the same procedure as in the above\r\n     */\r\n    /**\r\n     * implemented\r\n     */\r\n    bond(user){\r\n        console.log(\"garbage function delete now\",user,)\r\n    }\r\n\r\n    /**\r\n     * Chnages the data of state users\r\n     * @returns \r\n     */\r\n    search() {\r\n        let searchData = document.getElementById('searchData').value\r\n        console.log('value..',searchData,this.state.users)\r\n        if(searchData==''||searchData==undefined){\r\n            this.state.users=Users\r\n            this.setState({ShowUsers:[0]})\r\n            return;\r\n        }\r\n        this.state.users=[]\r\n        switch(this.state.searchBy){\r\n            case \"Employee ID\":\r\n                for(let userNumber=0;userNumber<Users.length;userNumber++){\r\n                    if(searchData!='' && String(Users[userNumber].id).includes(searchData)){\r\n                        this.state.users.push(Users[userNumber])\r\n                    }\r\n                }\r\n                break;\r\n            case \"Employee name\":\r\n                for(let userNumber=0;userNumber<Users.length;userNumber++){\r\n                    if(Users[userNumber].employeeName.toUpperCase().includes(searchData.toUpperCase())){\r\n                        this.state.users.push(Users[userNumber])\r\n                    }\r\n                }\r\n                break;\r\n            case \"Employee email\":\r\n                for(let userNumber=0;userNumber<Users.length;userNumber++){\r\n                    if(Users[userNumber].email.toUpperCase().includes(searchData.toUpperCase())){\r\n                        this.state.users.push(Users[userNumber])\r\n                    }\r\n                }\r\n                break;\r\n\r\n                case \"Number of days skipped\":\r\n                    for(let userNumber=0;userNumber<Users.length;userNumber++){\r\n                        if(searchData!='' && String(Users[userNumber].noOfDays).includes(searchData)){\r\n                            this.state.users.push(Users[userNumber])\r\n                        }\r\n                    }\r\n                    break;\r\n            default:\r\n                console.log(\"In default\")\r\n                this.state.users=Users\r\n                break;\r\n        }\r\n        this.setState({ShowUsers:[0]})\r\n        console.log(\"...\",this.state.users,searchData)\r\n    }\r\n\r\n\r\n    selectSearchType(e){\r\n        this.setState({searchBy:e.target.value})\r\n        console.log(this.state.searchBy)\r\n    }\r\n\r\n    \r\n  backward(){\r\n    if(this.state.pageNo-2>0){\r\n      this.state.pageNo=this.state.pageNo-2\r\n      this.getData(this.state.pageNo,this.state.selectedRows); \r\n    }\r\n}\r\n\r\npreviousPage(){\r\n  if(this.state.pageNo-1>0){\r\n      this.state.pageNo=this.state.pageNo-1\r\n      this.getData(this.state.pageNo,this.state.pageSize); \r\n    }\r\n}\r\n//Get the length of  data present in database\r\n\r\nnextPage(){\r\n  if(this.state.pageNo+1<TEMPORERY_SIZE){\r\n      this.state.pageNo=this.state.pageNo+1\r\n      this.getData(this.state.pageNo,this.state.pageSize); \r\n    }\r\n}\r\n\r\nforward(){\r\n\r\n  if(this.state.pageNo+2<TEMPORERY_SIZE){\r\n      this.state.pageNo=this.state.pageNo+2\r\n      this.getData(this.state.pageNo,this.state.pageSize); \r\n    }\r\n}\r\nselectRowsPerPage(pageSize){\r\n    this.state.pageSize=pageSize;\r\n    this.getData(this.state.pageNo,pageSize);\r\n}\r\n\r\n    render() {\r\n        //console.log(\"This is in body page\")\r\n        return (\r\n            <>\r\n            \r\n                <div id=\"employeeInformation\">\r\n                    <link href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\" />\r\n                    <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\" />\r\n                    <script src=\"//code.jquery.com/jquery-1.11.1.min.js\" />\r\n                    <div>\r\n                        <input type=\"text\" id=\"searchData\" style={{ float: 'left', marginTop: '5px' }} placeholder={this.state.searchBy} onKeyUp={this.search} name=\"search\" />\r\n                        \r\n                        <select name=\"sortBy\" id=\"sortBy\" onChange={this.search} class=\"btn btn-primary pull-left\" style={{ float: 'left', marginTop: '5px', marginLeft: '5px' }} onClick={this.selectSearchType}>\r\n                                <option value=\"Employee ID\">Search by</option>\r\n                                <option value=\"Employee ID\">EmployeeID</option>\r\n                                <option value=\"Employee name\">Employee name</option>\r\n                                <option value=\"Employee email\">Employee email</option>\r\n                                <option value=\"Number of days skipped\">Number of days skipped</option>\r\n                            </select>\r\n                        <button type=\"submit\" onClick={this.search} class=\"btn btn-primary pull-left\" style={{ marginLeft: '5px', height: \"30px\", marginTop: '5px' }} data-title=\"Signout\" data-toggle=\"modal\" data-target=\"#ssignout\"><i class=\"fa fa-search\"></i></button>\r\n                    </div>\r\n\r\n\r\n                    <table id=\"mytable\" class=\"table\" style={{height:'50%'}}>\r\n                        <thead>\r\n                            <tr>\r\n                                {/* <th><input type=\"checkbox\" id=\"checkall\" /></th> */}\r\n                                <th >Employee ID</th>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th >Meal taken in percentage</th>\r\n                                <th>No of days skipped</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{ height:\"350px\"}}>\r\n                            {(this.state.users.length!=0)?\r\n                                this.state.users.map(\r\n                                    user =>\r\n                                        <tr>\r\n                                            <td>{user.id}</td>\r\n                                            <td>{user.employeeName}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>\r\n                                                <div class=\"progress\">\r\n                                                    <div style={{ width: user.noOfDaysInPercentage + \"%\" }} aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"60\" role=\"progressbar\" class=\"red progress-bar\">\r\n                                                        <span>{user.noOfDaysInPercentage}%</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td><span class=\"label label-info\">{user.noOfDays}</span></td>\r\n                                            <td>\r\n\r\n                                                <label class=\"switch\">\r\n                                                    {(user.status == 'no') ?\r\n                                                        <>\r\n                                                            <input type=\"checkbox\" id={user.id} onClick={this.toggleClicked}/>\r\n                                                            <span class=\"slider round\"></span></> :\r\n                                                        <><span>Submitted</span></>\r\n                                                    }\r\n                                                </label>\r\n                                            </td>\r\n                                        </tr>\r\n                                ):\r\n                                <p style={{width:'100%',marginTop:'10%'}}>No data found</p>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                \r\n                <Footer selectRowsPerPage={this.selectRowsPerPage} rowsPerPage={10} pageNo={this.state.pageNo} noOfRecords={this.state.totalNoOfRecords} backward={this.backward} previousPage={this.previousPage} nextPage={this.nextPage} forward={this.forward} pageSize={this.state.pageSize}/>\r\n                <SimpleDialog open={this.props.open} onClose={this.props.onClose} SelectedEmployees={SelectedEmployees} Users={Users} doSave={this.props.doSave} />\r\n                {/* <SendValidation  open={this.props.open} onClose={this.props.onClose} SelectedEmployees={SelectedEmployees} uncheck={this.uncheck} /> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} SelectedEmployees \r\n * SelectedEmployees is a array which holds the employee id which are selected to send an status\r\n * Uncheck and change the notified text to submitted because these SelectedEmployees has sent a status\r\n */\r\nfunction uncheck(SelectedEmployees) {\r\n    //console.log(\"Unchecking\",SelectedEmployees.length)\r\n    if (SelectedEmployees.length != 0 && SelectedEmployees.length != undefined) {\r\n        SelectedEmployees.forEach(employeeID => {\r\n            let checkBox = document.getElementById(employeeID)\r\n            checkBox.checked = false\r\n            checkBox.disabled = true\r\n            checkBox.parentElement.parentElement.lastElementChild.innerHTML = 'Submitted'\r\n            Employee.submitStatus(employeeID)\r\n            \r\n        });\r\n        console.log([new Date(),SelectedEmployees])\r\n    }\r\n}\r\n\r\n/**\r\n * To clear all the employeeID's in the global variable whenever the component reloads\r\n * \r\n * Defination done\r\n */\r\nfunction releasingEmployees() {\r\n    SelectedEmployees = []\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @returns true\r\n * As of now no use of isSelected\r\n */\r\nfunction isSelected() {\r\n    if (SelectedEmployees.length == 0) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nexport { uncheck, releasingEmployees, isSelected }"]},"metadata":{},"sourceType":"module"}